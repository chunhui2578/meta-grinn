--- linux-orig/arch/arm/mach-omap2/devices.c	2012-11-09 16:19:09.000000000 +0100
+++ linux-gisbc/arch/arm/mach-omap2/devices.c	2013-01-02 15:05:14.014013270 +0100
@@ -1196,12 +1196,12 @@ static struct cpsw_slave_data am33xx_cps
 	{
 		.slave_reg_ofs  = 0x208,
 		.sliver_reg_ofs = 0xd80,
-		.phy_id		= "0:00",
+		.phy_id		= "0:01",
 	},
 	{
 		.slave_reg_ofs  = 0x308,
 		.sliver_reg_ofs = 0xdc0,
-		.phy_id		= "0:01",
+		.phy_id		= "0:02",
 	},
 };
 
@@ -1336,6 +1336,7 @@ void am33xx_cpsw_macidfillup(char *eepro
 #define MII_MODE_ENABLE		0x0
 #define RMII_MODE_ENABLE	0x5
 #define RGMII_MODE_ENABLE	0xA
+#define RGMII_MODE2_ENABLE	0x3A
 #define MAC_MII_SEL		0x650
 
 void am33xx_cpsw_init(unsigned int gigen)
@@ -1353,7 +1354,7 @@ void am33xx_cpsw_init(unsigned int gigen
 	am33xx_cpsw_slaves[0].mac_addr[5] = (mac_lo & 0xFF00) >> 8;
 
 	/* Read MACID0 from eeprom if eFuse MACID is invalid */
-	if (!is_valid_ether_addr(am33xx_cpsw_slaves[0].mac_addr)) {
+	if (1 /*!is_valid_ether_addr(am33xx_cpsw_slaves[0].mac_addr)*/) {
 		for (i = 0; i < ETH_ALEN; i++)
 			am33xx_cpsw_slaves[0].mac_addr[i] = am33xx_macid0[i];
 	}
@@ -1368,7 +1369,7 @@ void am33xx_cpsw_init(unsigned int gigen
 	am33xx_cpsw_slaves[1].mac_addr[5] = (mac_lo & 0xFF00) >> 8;
 
 	/* Read MACID1 from eeprom if eFuse MACID is invalid */
-	if (!is_valid_ether_addr(am33xx_cpsw_slaves[1].mac_addr)) {
+	if (1 /*!is_valid_ether_addr(am33xx_cpsw_slaves[1].mac_addr)*/) {
 		for (i = 0; i < ETH_ALEN; i++)
 			am33xx_cpsw_slaves[1].mac_addr[i] = am33xx_macid1[i];
 	}
@@ -1383,7 +1384,7 @@ void am33xx_cpsw_init(unsigned int gigen
 		am33xx_cpsw_slaves[0].phy_id = "0:1e";
 		am33xx_cpsw_slaves[1].phy_id = "0:00";
 	} else {
-		__raw_writel(RGMII_MODE_ENABLE,
+		__raw_writel(RGMII_MODE2_ENABLE,
 				AM33XX_CTRL_REGADDR(MAC_MII_SEL));
 	}
 
